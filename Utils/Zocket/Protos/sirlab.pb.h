// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sirlab.proto

#ifndef PROTOBUF_sirlab_2eproto__INCLUDED
#define PROTOBUF_sirlab_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace sirlab {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sirlab_2eproto();
void protobuf_AssignDesc_sirlab_2eproto();
void protobuf_ShutdownFile_sirlab_2eproto();

class State;

// ===================================================================

class State : public ::google::protobuf::Message {
 public:
  State();
  virtual ~State();

  State(const State& from);

  inline State& operator=(const State& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const State& default_instance();

  void Swap(State* other);

  // implements Message ----------------------------------------------

  inline State* New() const { return New(NULL); }

  State* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const State& from);
  void MergeFrom(const State& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sir1_x = 1;
  bool has_sir1_x() const;
  void clear_sir1_x();
  static const int kSir1XFieldNumber = 1;
  ::google::protobuf::int32 sir1_x() const;
  void set_sir1_x(::google::protobuf::int32 value);

  // required int32 sir1_y = 2;
  bool has_sir1_y() const;
  void clear_sir1_y();
  static const int kSir1YFieldNumber = 2;
  ::google::protobuf::int32 sir1_y() const;
  void set_sir1_y(::google::protobuf::int32 value);

  // required float sir1_theta = 3;
  bool has_sir1_theta() const;
  void clear_sir1_theta();
  static const int kSir1ThetaFieldNumber = 3;
  float sir1_theta() const;
  void set_sir1_theta(float value);

  // required int32 sir2_x = 4;
  bool has_sir2_x() const;
  void clear_sir2_x();
  static const int kSir2XFieldNumber = 4;
  ::google::protobuf::int32 sir2_x() const;
  void set_sir2_x(::google::protobuf::int32 value);

  // required int32 sir2_y = 5;
  bool has_sir2_y() const;
  void clear_sir2_y();
  static const int kSir2YFieldNumber = 5;
  ::google::protobuf::int32 sir2_y() const;
  void set_sir2_y(::google::protobuf::int32 value);

  // required float sir2_theta = 6;
  bool has_sir2_theta() const;
  void clear_sir2_theta();
  static const int kSir2ThetaFieldNumber = 6;
  float sir2_theta() const;
  void set_sir2_theta(float value);

  // required int32 sir3_x = 7;
  bool has_sir3_x() const;
  void clear_sir3_x();
  static const int kSir3XFieldNumber = 7;
  ::google::protobuf::int32 sir3_x() const;
  void set_sir3_x(::google::protobuf::int32 value);

  // required int32 sir3_y = 8;
  bool has_sir3_y() const;
  void clear_sir3_y();
  static const int kSir3YFieldNumber = 8;
  ::google::protobuf::int32 sir3_y() const;
  void set_sir3_y(::google::protobuf::int32 value);

  // required float sir3_theta = 9;
  bool has_sir3_theta() const;
  void clear_sir3_theta();
  static const int kSir3ThetaFieldNumber = 9;
  float sir3_theta() const;
  void set_sir3_theta(float value);

  // required int32 adv1_x = 10;
  bool has_adv1_x() const;
  void clear_adv1_x();
  static const int kAdv1XFieldNumber = 10;
  ::google::protobuf::int32 adv1_x() const;
  void set_adv1_x(::google::protobuf::int32 value);

  // required int32 adv1_y = 11;
  bool has_adv1_y() const;
  void clear_adv1_y();
  static const int kAdv1YFieldNumber = 11;
  ::google::protobuf::int32 adv1_y() const;
  void set_adv1_y(::google::protobuf::int32 value);

  // optional float adv1_theta = 12;
  bool has_adv1_theta() const;
  void clear_adv1_theta();
  static const int kAdv1ThetaFieldNumber = 12;
  float adv1_theta() const;
  void set_adv1_theta(float value);

  // required int32 adv2_x = 13;
  bool has_adv2_x() const;
  void clear_adv2_x();
  static const int kAdv2XFieldNumber = 13;
  ::google::protobuf::int32 adv2_x() const;
  void set_adv2_x(::google::protobuf::int32 value);

  // required int32 adv2_y = 14;
  bool has_adv2_y() const;
  void clear_adv2_y();
  static const int kAdv2YFieldNumber = 14;
  ::google::protobuf::int32 adv2_y() const;
  void set_adv2_y(::google::protobuf::int32 value);

  // optional float adv2_theta = 15;
  bool has_adv2_theta() const;
  void clear_adv2_theta();
  static const int kAdv2ThetaFieldNumber = 15;
  float adv2_theta() const;
  void set_adv2_theta(float value);

  // required int32 adv3_x = 16;
  bool has_adv3_x() const;
  void clear_adv3_x();
  static const int kAdv3XFieldNumber = 16;
  ::google::protobuf::int32 adv3_x() const;
  void set_adv3_x(::google::protobuf::int32 value);

  // required int32 adv3_y = 17;
  bool has_adv3_y() const;
  void clear_adv3_y();
  static const int kAdv3YFieldNumber = 17;
  ::google::protobuf::int32 adv3_y() const;
  void set_adv3_y(::google::protobuf::int32 value);

  // optional float adv3_theta = 18;
  bool has_adv3_theta() const;
  void clear_adv3_theta();
  static const int kAdv3ThetaFieldNumber = 18;
  float adv3_theta() const;
  void set_adv3_theta(float value);

  // required int32 ball_x = 19;
  bool has_ball_x() const;
  void clear_ball_x();
  static const int kBallXFieldNumber = 19;
  ::google::protobuf::int32 ball_x() const;
  void set_ball_x(::google::protobuf::int32 value);

  // required int32 ball_y = 20;
  bool has_ball_y() const;
  void clear_ball_y();
  static const int kBallYFieldNumber = 20;
  ::google::protobuf::int32 ball_y() const;
  void set_ball_y(::google::protobuf::int32 value);

  // optional int32 message = 21;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 21;
  ::google::protobuf::int32 message() const;
  void set_message(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sirlab.State)
 private:
  inline void set_has_sir1_x();
  inline void clear_has_sir1_x();
  inline void set_has_sir1_y();
  inline void clear_has_sir1_y();
  inline void set_has_sir1_theta();
  inline void clear_has_sir1_theta();
  inline void set_has_sir2_x();
  inline void clear_has_sir2_x();
  inline void set_has_sir2_y();
  inline void clear_has_sir2_y();
  inline void set_has_sir2_theta();
  inline void clear_has_sir2_theta();
  inline void set_has_sir3_x();
  inline void clear_has_sir3_x();
  inline void set_has_sir3_y();
  inline void clear_has_sir3_y();
  inline void set_has_sir3_theta();
  inline void clear_has_sir3_theta();
  inline void set_has_adv1_x();
  inline void clear_has_adv1_x();
  inline void set_has_adv1_y();
  inline void clear_has_adv1_y();
  inline void set_has_adv1_theta();
  inline void clear_has_adv1_theta();
  inline void set_has_adv2_x();
  inline void clear_has_adv2_x();
  inline void set_has_adv2_y();
  inline void clear_has_adv2_y();
  inline void set_has_adv2_theta();
  inline void clear_has_adv2_theta();
  inline void set_has_adv3_x();
  inline void clear_has_adv3_x();
  inline void set_has_adv3_y();
  inline void clear_has_adv3_y();
  inline void set_has_adv3_theta();
  inline void clear_has_adv3_theta();
  inline void set_has_ball_x();
  inline void clear_has_ball_x();
  inline void set_has_ball_y();
  inline void clear_has_ball_y();
  inline void set_has_message();
  inline void clear_has_message();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sir1_x_;
  ::google::protobuf::int32 sir1_y_;
  float sir1_theta_;
  ::google::protobuf::int32 sir2_x_;
  ::google::protobuf::int32 sir2_y_;
  float sir2_theta_;
  ::google::protobuf::int32 sir3_x_;
  ::google::protobuf::int32 sir3_y_;
  float sir3_theta_;
  ::google::protobuf::int32 adv1_x_;
  ::google::protobuf::int32 adv1_y_;
  float adv1_theta_;
  ::google::protobuf::int32 adv2_x_;
  ::google::protobuf::int32 adv2_y_;
  float adv2_theta_;
  ::google::protobuf::int32 adv3_x_;
  ::google::protobuf::int32 adv3_y_;
  float adv3_theta_;
  ::google::protobuf::int32 ball_x_;
  ::google::protobuf::int32 ball_y_;
  ::google::protobuf::int32 message_;
  friend void  protobuf_AddDesc_sirlab_2eproto();
  friend void protobuf_AssignDesc_sirlab_2eproto();
  friend void protobuf_ShutdownFile_sirlab_2eproto();

  void InitAsDefaultInstance();
  static State* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// State

// required int32 sir1_x = 1;
inline bool State::has_sir1_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void State::set_has_sir1_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void State::clear_has_sir1_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void State::clear_sir1_x() {
  sir1_x_ = 0;
  clear_has_sir1_x();
}
inline ::google::protobuf::int32 State::sir1_x() const {
  // @@protoc_insertion_point(field_get:sirlab.State.sir1_x)
  return sir1_x_;
}
inline void State::set_sir1_x(::google::protobuf::int32 value) {
  set_has_sir1_x();
  sir1_x_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.sir1_x)
}

// required int32 sir1_y = 2;
inline bool State::has_sir1_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void State::set_has_sir1_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void State::clear_has_sir1_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void State::clear_sir1_y() {
  sir1_y_ = 0;
  clear_has_sir1_y();
}
inline ::google::protobuf::int32 State::sir1_y() const {
  // @@protoc_insertion_point(field_get:sirlab.State.sir1_y)
  return sir1_y_;
}
inline void State::set_sir1_y(::google::protobuf::int32 value) {
  set_has_sir1_y();
  sir1_y_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.sir1_y)
}

// required float sir1_theta = 3;
inline bool State::has_sir1_theta() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void State::set_has_sir1_theta() {
  _has_bits_[0] |= 0x00000004u;
}
inline void State::clear_has_sir1_theta() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void State::clear_sir1_theta() {
  sir1_theta_ = 0;
  clear_has_sir1_theta();
}
inline float State::sir1_theta() const {
  // @@protoc_insertion_point(field_get:sirlab.State.sir1_theta)
  return sir1_theta_;
}
inline void State::set_sir1_theta(float value) {
  set_has_sir1_theta();
  sir1_theta_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.sir1_theta)
}

// required int32 sir2_x = 4;
inline bool State::has_sir2_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void State::set_has_sir2_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void State::clear_has_sir2_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void State::clear_sir2_x() {
  sir2_x_ = 0;
  clear_has_sir2_x();
}
inline ::google::protobuf::int32 State::sir2_x() const {
  // @@protoc_insertion_point(field_get:sirlab.State.sir2_x)
  return sir2_x_;
}
inline void State::set_sir2_x(::google::protobuf::int32 value) {
  set_has_sir2_x();
  sir2_x_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.sir2_x)
}

// required int32 sir2_y = 5;
inline bool State::has_sir2_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void State::set_has_sir2_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void State::clear_has_sir2_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void State::clear_sir2_y() {
  sir2_y_ = 0;
  clear_has_sir2_y();
}
inline ::google::protobuf::int32 State::sir2_y() const {
  // @@protoc_insertion_point(field_get:sirlab.State.sir2_y)
  return sir2_y_;
}
inline void State::set_sir2_y(::google::protobuf::int32 value) {
  set_has_sir2_y();
  sir2_y_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.sir2_y)
}

// required float sir2_theta = 6;
inline bool State::has_sir2_theta() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void State::set_has_sir2_theta() {
  _has_bits_[0] |= 0x00000020u;
}
inline void State::clear_has_sir2_theta() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void State::clear_sir2_theta() {
  sir2_theta_ = 0;
  clear_has_sir2_theta();
}
inline float State::sir2_theta() const {
  // @@protoc_insertion_point(field_get:sirlab.State.sir2_theta)
  return sir2_theta_;
}
inline void State::set_sir2_theta(float value) {
  set_has_sir2_theta();
  sir2_theta_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.sir2_theta)
}

// required int32 sir3_x = 7;
inline bool State::has_sir3_x() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void State::set_has_sir3_x() {
  _has_bits_[0] |= 0x00000040u;
}
inline void State::clear_has_sir3_x() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void State::clear_sir3_x() {
  sir3_x_ = 0;
  clear_has_sir3_x();
}
inline ::google::protobuf::int32 State::sir3_x() const {
  // @@protoc_insertion_point(field_get:sirlab.State.sir3_x)
  return sir3_x_;
}
inline void State::set_sir3_x(::google::protobuf::int32 value) {
  set_has_sir3_x();
  sir3_x_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.sir3_x)
}

// required int32 sir3_y = 8;
inline bool State::has_sir3_y() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void State::set_has_sir3_y() {
  _has_bits_[0] |= 0x00000080u;
}
inline void State::clear_has_sir3_y() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void State::clear_sir3_y() {
  sir3_y_ = 0;
  clear_has_sir3_y();
}
inline ::google::protobuf::int32 State::sir3_y() const {
  // @@protoc_insertion_point(field_get:sirlab.State.sir3_y)
  return sir3_y_;
}
inline void State::set_sir3_y(::google::protobuf::int32 value) {
  set_has_sir3_y();
  sir3_y_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.sir3_y)
}

// required float sir3_theta = 9;
inline bool State::has_sir3_theta() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void State::set_has_sir3_theta() {
  _has_bits_[0] |= 0x00000100u;
}
inline void State::clear_has_sir3_theta() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void State::clear_sir3_theta() {
  sir3_theta_ = 0;
  clear_has_sir3_theta();
}
inline float State::sir3_theta() const {
  // @@protoc_insertion_point(field_get:sirlab.State.sir3_theta)
  return sir3_theta_;
}
inline void State::set_sir3_theta(float value) {
  set_has_sir3_theta();
  sir3_theta_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.sir3_theta)
}

// required int32 adv1_x = 10;
inline bool State::has_adv1_x() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void State::set_has_adv1_x() {
  _has_bits_[0] |= 0x00000200u;
}
inline void State::clear_has_adv1_x() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void State::clear_adv1_x() {
  adv1_x_ = 0;
  clear_has_adv1_x();
}
inline ::google::protobuf::int32 State::adv1_x() const {
  // @@protoc_insertion_point(field_get:sirlab.State.adv1_x)
  return adv1_x_;
}
inline void State::set_adv1_x(::google::protobuf::int32 value) {
  set_has_adv1_x();
  adv1_x_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.adv1_x)
}

// required int32 adv1_y = 11;
inline bool State::has_adv1_y() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void State::set_has_adv1_y() {
  _has_bits_[0] |= 0x00000400u;
}
inline void State::clear_has_adv1_y() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void State::clear_adv1_y() {
  adv1_y_ = 0;
  clear_has_adv1_y();
}
inline ::google::protobuf::int32 State::adv1_y() const {
  // @@protoc_insertion_point(field_get:sirlab.State.adv1_y)
  return adv1_y_;
}
inline void State::set_adv1_y(::google::protobuf::int32 value) {
  set_has_adv1_y();
  adv1_y_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.adv1_y)
}

// optional float adv1_theta = 12;
inline bool State::has_adv1_theta() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void State::set_has_adv1_theta() {
  _has_bits_[0] |= 0x00000800u;
}
inline void State::clear_has_adv1_theta() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void State::clear_adv1_theta() {
  adv1_theta_ = 0;
  clear_has_adv1_theta();
}
inline float State::adv1_theta() const {
  // @@protoc_insertion_point(field_get:sirlab.State.adv1_theta)
  return adv1_theta_;
}
inline void State::set_adv1_theta(float value) {
  set_has_adv1_theta();
  adv1_theta_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.adv1_theta)
}

// required int32 adv2_x = 13;
inline bool State::has_adv2_x() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void State::set_has_adv2_x() {
  _has_bits_[0] |= 0x00001000u;
}
inline void State::clear_has_adv2_x() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void State::clear_adv2_x() {
  adv2_x_ = 0;
  clear_has_adv2_x();
}
inline ::google::protobuf::int32 State::adv2_x() const {
  // @@protoc_insertion_point(field_get:sirlab.State.adv2_x)
  return adv2_x_;
}
inline void State::set_adv2_x(::google::protobuf::int32 value) {
  set_has_adv2_x();
  adv2_x_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.adv2_x)
}

// required int32 adv2_y = 14;
inline bool State::has_adv2_y() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void State::set_has_adv2_y() {
  _has_bits_[0] |= 0x00002000u;
}
inline void State::clear_has_adv2_y() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void State::clear_adv2_y() {
  adv2_y_ = 0;
  clear_has_adv2_y();
}
inline ::google::protobuf::int32 State::adv2_y() const {
  // @@protoc_insertion_point(field_get:sirlab.State.adv2_y)
  return adv2_y_;
}
inline void State::set_adv2_y(::google::protobuf::int32 value) {
  set_has_adv2_y();
  adv2_y_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.adv2_y)
}

// optional float adv2_theta = 15;
inline bool State::has_adv2_theta() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void State::set_has_adv2_theta() {
  _has_bits_[0] |= 0x00004000u;
}
inline void State::clear_has_adv2_theta() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void State::clear_adv2_theta() {
  adv2_theta_ = 0;
  clear_has_adv2_theta();
}
inline float State::adv2_theta() const {
  // @@protoc_insertion_point(field_get:sirlab.State.adv2_theta)
  return adv2_theta_;
}
inline void State::set_adv2_theta(float value) {
  set_has_adv2_theta();
  adv2_theta_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.adv2_theta)
}

// required int32 adv3_x = 16;
inline bool State::has_adv3_x() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void State::set_has_adv3_x() {
  _has_bits_[0] |= 0x00008000u;
}
inline void State::clear_has_adv3_x() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void State::clear_adv3_x() {
  adv3_x_ = 0;
  clear_has_adv3_x();
}
inline ::google::protobuf::int32 State::adv3_x() const {
  // @@protoc_insertion_point(field_get:sirlab.State.adv3_x)
  return adv3_x_;
}
inline void State::set_adv3_x(::google::protobuf::int32 value) {
  set_has_adv3_x();
  adv3_x_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.adv3_x)
}

// required int32 adv3_y = 17;
inline bool State::has_adv3_y() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void State::set_has_adv3_y() {
  _has_bits_[0] |= 0x00010000u;
}
inline void State::clear_has_adv3_y() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void State::clear_adv3_y() {
  adv3_y_ = 0;
  clear_has_adv3_y();
}
inline ::google::protobuf::int32 State::adv3_y() const {
  // @@protoc_insertion_point(field_get:sirlab.State.adv3_y)
  return adv3_y_;
}
inline void State::set_adv3_y(::google::protobuf::int32 value) {
  set_has_adv3_y();
  adv3_y_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.adv3_y)
}

// optional float adv3_theta = 18;
inline bool State::has_adv3_theta() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void State::set_has_adv3_theta() {
  _has_bits_[0] |= 0x00020000u;
}
inline void State::clear_has_adv3_theta() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void State::clear_adv3_theta() {
  adv3_theta_ = 0;
  clear_has_adv3_theta();
}
inline float State::adv3_theta() const {
  // @@protoc_insertion_point(field_get:sirlab.State.adv3_theta)
  return adv3_theta_;
}
inline void State::set_adv3_theta(float value) {
  set_has_adv3_theta();
  adv3_theta_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.adv3_theta)
}

// required int32 ball_x = 19;
inline bool State::has_ball_x() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void State::set_has_ball_x() {
  _has_bits_[0] |= 0x00040000u;
}
inline void State::clear_has_ball_x() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void State::clear_ball_x() {
  ball_x_ = 0;
  clear_has_ball_x();
}
inline ::google::protobuf::int32 State::ball_x() const {
  // @@protoc_insertion_point(field_get:sirlab.State.ball_x)
  return ball_x_;
}
inline void State::set_ball_x(::google::protobuf::int32 value) {
  set_has_ball_x();
  ball_x_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.ball_x)
}

// required int32 ball_y = 20;
inline bool State::has_ball_y() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void State::set_has_ball_y() {
  _has_bits_[0] |= 0x00080000u;
}
inline void State::clear_has_ball_y() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void State::clear_ball_y() {
  ball_y_ = 0;
  clear_has_ball_y();
}
inline ::google::protobuf::int32 State::ball_y() const {
  // @@protoc_insertion_point(field_get:sirlab.State.ball_y)
  return ball_y_;
}
inline void State::set_ball_y(::google::protobuf::int32 value) {
  set_has_ball_y();
  ball_y_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.ball_y)
}

// optional int32 message = 21;
inline bool State::has_message() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void State::set_has_message() {
  _has_bits_[0] |= 0x00100000u;
}
inline void State::clear_has_message() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void State::clear_message() {
  message_ = 0;
  clear_has_message();
}
inline ::google::protobuf::int32 State::message() const {
  // @@protoc_insertion_point(field_get:sirlab.State.message)
  return message_;
}
inline void State::set_message(::google::protobuf::int32 value) {
  set_has_message();
  message_ = value;
  // @@protoc_insertion_point(field_set:sirlab.State.message)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sirlab

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sirlab_2eproto__INCLUDED
